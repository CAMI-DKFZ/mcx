name: Build and Upload macOS Python Wheels
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master


jobs:
  build_windows_wheels:
    name: Build macOS wheels
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install QEMU and Other Dependencies
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install qemu-system-x86 libvirt-clients libvirt-daemon-system ovmf xmlstarlet
      - name: Download and Prepare Virsh Configuration for macOS
        shell: bash
        run: |
          lsblk
          cd $GITHUB_WORKSPACE/../
          OSX_PATH=$PWD && echo "OSX_PATH=$PWD" >> $GITHUB_ENV
          git clone --depth 1 --recursive https://github.com/kholia/OSX-KVM
          cd OSX-KVM && sed "s|/home/CHANGEME|$OSX_PATH|g" macOS-libvirt-Catalina.xml > MacOS-MCX.xml && \
            xmlstarlet ed -L -N w="http://libvirt.org/schemas/domain/qemu/1.0" -d '//disk[3]' MacOS-MCX.xml
          sudo virsh --connect qemu:///system define  $OSX_PATH/MacOS-MCX.xml
      - name: Download the MacOS MCX Builder QCOW2 Image
        shell: bash
        run: |
          cd $OSX_PATH
          curl -O https://kwafoo.coe.neu.edu/~matinraayai/macos-mcx-builder/mac_hdd_ng.img
      - name: Start MacOS VM, Build Wheels, and Copy Them Out of the VM
        shell: bash
        run: |
          virsh net-start default
          virsh start macOS
          # Wait 20 seconds for the boot menu to show up
          sleep 20s
          # Key strokes to select the correct disk to boot from the boot menu
          virsh send-key macOS --codeset usb 0x4f
          virsh send-key macOS --codeset usb 0x28
          # Wait for MacOS to boot
          sleep 45s
          VM_IP_ADDRESS=$(virsh net-dhcp-leases default | grep -ohE "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}")
          # Copy over the repo checked out by Github Actions located under /mcx/
          sshpass -p 1234 scp -o "StrictHostKeyChecking=no"  -r /mcx/ user@$VM_IP_ADDRESS:/Users/user/ || true
          sshpass -p 1234 ssh -tt user@$VM_IP_ADDRESS < /build.zsh
          sshpass -p 1234 scp -r user@$VM_IP_ADDRESS:/Users/user/mcx/pmcx/dist/ /mcx/
          virsh destroy macOS
          virsh net-destroy default
          docker run -it  -v /run/dbus/system_bus_socket:/run/dbus/system_bus_socket --privileged \
          -v /image:/image --pid host -v /dev/kvm:/dev/kvm -v $GITHUB_WORKSPACE:/mcx/ --cgroupns host \
          mcx-builder
      - name: Check If the Build Version Exists on PyPI
        id: perform_pypi_upload_check
        shell: bash
        run: |
          ${GITHUB_WORKSPACE}/.github/check-pypi-upload.sh
      - name: Upload packages to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ github.repository_owner == 'fangq' && steps.perform_pypi_upload_check.outputs.perform_pypi_upload == 1  && github.event_name != 'pull_request'}}
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verify_metadata: false
          verbose: true
          skip_existing: true