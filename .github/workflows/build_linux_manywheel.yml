name: Python Wheels
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master


jobs:
  build_linux_wheels:
    name: Build manylinux2014 Wheels
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Build Wheel Builder Container
        shell: bash
        run: |
          set -x
          cd Docker/PyPI
          docker build --tag mcx-wheel-builder --force-rm .
      - name: Build Manylinux2014 Wheels
        shell: bash
        run: |
          docker run -v ${GITHUB_WORKSPACE}/src/:/src/ mcx-wheel-builder

  build_windows_wheels:
    name: Build Windows wheels
    runs-on: windows-latest
    strategy:
      matrix:
        python_version: [ '3.6', '3.7', '3.8', '3.9', '3.10', '3.11' ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install CUDA
        run: |
          choco install -y cuda
          echo "CUDA_PATH=$env:CUDA_PATH" >> $env:GITHUB_ENV
          echo "CUDA_TOOLKIT_ROOT_DIR=$env:CUDA_PATH" >> $env:GITHUB_ENV
      - name: Install Zlib Dev
        run: |
          curl.exe --retry 3 -kL https://cytranet.dl.sourceforge.net/project/gnuwin32/zlib/1.2.3/zlib-1.2.3-lib.zip --output zlib.zip
          Expand-Archive .\zlib.zip -DestinationPath zlib\
          echo "CMAKE_INCLUDE_PATH=$PWD\zlib\include" >> $env:GITHUB_ENV
          echo "CMAKE_LIBRARY_PATH=$PWD\zlib\lib" >> $env:GITHUB_ENV
          rm zlib.zip

      - name: Build Windows Wheels
        run: |
          cd src/
          pip install wheel
          python setup.py bdist_wheel
          
  

#  upload_pypi:
#    needs: build_linux_wheels, build_windows_wheels
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/download-artifact@v3
#        with:
#          name: artifact
#          path: dist
#
#      - uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          user: __token__
#          password: ${{ secrets.mcx_pypi_secret }}
